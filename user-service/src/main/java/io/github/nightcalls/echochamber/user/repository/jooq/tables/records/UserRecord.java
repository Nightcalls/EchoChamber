/*
 * This file is generated by jOOQ.
 */
package io.github.nightcalls.echochamber.user.repository.jooq.tables.records;


import io.github.nightcalls.echochamber.user.repository.jooq.tables.User;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>u.user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>u.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>u.user.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>u.user.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>u.user.created_ts</code>.
     */
    public void setCreatedTs(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>u.user.created_ts</code>.
     */
    public OffsetDateTime getCreatedTs() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>u.user.updated_ts</code>.
     */
    public void setUpdatedTs(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>u.user.updated_ts</code>.
     */
    public OffsetDateTime getUpdatedTs() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>u.user.last_login_ts</code>.
     */
    public void setLastLoginTs(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>u.user.last_login_ts</code>.
     */
    public OffsetDateTime getLastLoginTs() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>u.user.last_login_ip</code>.
     */
    public void setLastLoginIp(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>u.user.last_login_ip</code>.
     */
    public String getLastLoginIp() {
        return (String) get(5);
    }

    /**
     * Setter for <code>u.user.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>u.user.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return User.USER.CREATED_TS;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return User.USER.UPDATED_TS;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return User.USER.LAST_LOGIN_TS;
    }

    @Override
    public Field<String> field6() {
        return User.USER.LAST_LOGIN_IP;
    }

    @Override
    public Field<Boolean> field7() {
        return User.USER.DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreatedTs();
    }

    @Override
    public OffsetDateTime component4() {
        return getUpdatedTs();
    }

    @Override
    public OffsetDateTime component5() {
        return getLastLoginTs();
    }

    @Override
    public String component6() {
        return getLastLoginIp();
    }

    @Override
    public Boolean component7() {
        return getDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreatedTs();
    }

    @Override
    public OffsetDateTime value4() {
        return getUpdatedTs();
    }

    @Override
    public OffsetDateTime value5() {
        return getLastLoginTs();
    }

    @Override
    public String value6() {
        return getLastLoginIp();
    }

    @Override
    public Boolean value7() {
        return getDeleted();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(OffsetDateTime value) {
        setCreatedTs(value);
        return this;
    }

    @Override
    public UserRecord value4(OffsetDateTime value) {
        setUpdatedTs(value);
        return this;
    }

    @Override
    public UserRecord value5(OffsetDateTime value) {
        setLastLoginTs(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setLastLoginIp(value);
        return this;
    }

    @Override
    public UserRecord value7(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, OffsetDateTime value3, OffsetDateTime value4, OffsetDateTime value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String name, OffsetDateTime createdTs, OffsetDateTime updatedTs, OffsetDateTime lastLoginTs, String lastLoginIp, Boolean deleted) {
        super(User.USER);

        setId(id);
        setName(name);
        setCreatedTs(createdTs);
        setUpdatedTs(updatedTs);
        setLastLoginTs(lastLoginTs);
        setLastLoginIp(lastLoginIp);
        setDeleted(deleted);
    }
}
